spring.application.name=english-learning-app

# アプリケーションのログレベル設定(本番環境では不要)
logging.level.com.example.englishapp.service.CustomUserDetailsService=DEBUG
# Mybatisのログレベル設定(本番環境では不要。SQL実行確認用)
logging.level.com.example.englishapp.mapper=DEBUG
# Spring Securityのログレベル設定(本番環境では不要)
logging.level.org.springframework.security=DEBUG

# Server Port
server.port=8080

# Database Connection
# docker-compose.ymlで定義するサービス名(db)をホスト名として指定
spring.datasource.url=jdbc:mysql://db:3306/english_db?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MyBatis
# Mapper XMLファイルの場所を指定
mybatis.mapper-locations=classpath:/mapper/*.xml
# DTOのエイリアス
mybatis.type-aliases-package=com.example.englishapp.dto
# MyBatisでスネークケース(DB)とキャメルケース(Java)を自動マッピングする設定
mybatis.configuration.map-underscore-to-camel-case=true

# File Upload Settings
# コンテナ内のアップロード先ディレクトリ
file.upload-dir=/app/uploads
# APIからファイルへアクセスする際のベースパス
file.resource-path=/files

# ファイルアップロード設定
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# DevTools Settings for Docker（Dokcerでのホットリロード）
spring.devtools.restart.poll-interval=2s
spring.devtools.restart.quiet-period=1s

# File Upload Settings
# コンテナ内のアップロード先ディレクトリ (docker-composeでマウントしたパス)
# file.upload-dir=/app/uploads
file.upload-dir.images=/app/uploads/images
file.upload-dir.audios=/app/uploads/audios

# APIからファイルへアクセスする際のベースパス
file.resource-path=/files/

# ...
# JWT Settings
# (本番環境では環境変数などから読み込むべきです)
jwt.secret=my-super-secret-key-that-is-long-enough-for-hs256
# JWTの有効期限: 24時間 (ミリ秒単位)
jwt.expiration-ms=86400000